
int Constructors()
a => 10
b => 15
b => 35
b => 20
c => 25
a => 10
b => 15
b => 35
b => 20
c => 25

int Assignment()
x => 32
y => 64
y => 96
z => 128
Size of foo: 0
Size of bar: 4

int Begin()
a => 10
b => 20
b => 150

int RBegin()
z => 9
y => 150
y => 20
x => 10

int Empty()
b => 101
b => 202

int Size()
mymultimap.size() is 4

int MaxSize()
The multimap contains 1000 elements.

int Insert()
mymultimap contains:
a => 100
b => 75
c => 300
z => 150
z => 400
anothermultimap contains:
a => 100
b => 75

int Erase()
a => 10
b => 30
c => 40
d => 50

int Swap()
foo contains:
a => 11
a => 55
b => 22
bar contains:
x => 100
y => 200
foo contains:
x => 100
y => 200
bar contains:
a => 11
a => 55
b => 22

int Clear()
mymultimap contains:
b => 80
b => 120
q => 360
mymultimap contains:
a => 11
x => 22

int KeyComp()
mymultimap contains:
a => 100
b => 200
b => 211
c => 300


int ValComp()
mymultimap contains:
x => 101
y => 202
y => 252
z => 303

int Find()
elements in mymm:
y => 20
z => 40

int Count()
There are 1 elements with key x: 50 100 150 200 250 300
There are 1 elements with key y: 200 250 300
There are 1 elements with key z: 300

int Bound()
b => 121
c => 1001
c => 2002
d => 11011
e => 44

int EqualRange()
mymm contains:
a => 10 20 30 40 50 60 60
b => 40 50 60 60
c => 60 60
d => 60

int RelOps()
foo and bar are not equal
foo is greater than bar
foo is greater than or equal to bar
